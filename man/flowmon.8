.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "FLOWMON 8"
.TH FLOWMON 8 "2017-04-17" "" "Linux System Administration"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
flowmon \- network data flow monitor
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBflowmon\fR [ \fB\-f\fR \fIfilter\fR [ \fB\-i\fR \fIiface\fR ] [ \fB\-d\fR \fIdescription\fR ] ] ...
.PP
\&\fBflowmon\fR \fIfilter_file\fR [ \fIoptions\fR ]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fIflowmon\fR is a tool to monitor and report amount of network traffic, with
data streams defined in a similar fashion to \fItcpdump\fR\|(8).
.PP
\&\fIflowmon\fR is intended to be data source for some other program, like ncurses
display, \fIrrdtool\fR\|(1) writer, or an agent of monitoring system.
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fIflowmon\fR expects in command line arguments a list of streams to monitor.
A stream has a packet filter, may be attached to specific network interface,
and may have a description. Order of options is not important, except the rule
that first \fB\-f\fR option is combined with first \fB\-i\fR and first \fB\-d\fR, second
\&\fB\-f\fR option is combined with second \fB\-i\fR and \fB\-d\fR, and so on.
.PP
Supported options are:
.IP "\fB\-f\fR \fIfilter\fR" 4
.IX Item "-f filter"
filter definition in \fIbpf\fR\|(4) syntax
.IP "\fB\-i\fR \fIiface\fR" 4
.IX Item "-i iface"
interface on which \fB\-f\fR filter will operate; defaults to \f(CW\*(C`any\*(C'\fR
.IP "\fB\-d\fR \fIdescription\fR" 4
.IX Item "-d description"
stream description; defaults to \fB\-f\fR filter itself
.SH "FILTER FILE"
.IX Header "FILTER FILE"
\&\fIflowmon\fR supports reading stream definitions from a file. Each stream
definition is a separate line and has three fields: interface name, \fIbpf\fR\|(4)
filter, and description. Empty lines and lines starting with \f(CW\*(C`#\*(C'\fR character
are ignored.
.PP
Interface name is just a sequence of non-space characters, and filter and
description are surrounded with single quote (\f(CW\*(C`\*(Aq\*(C'\fR) characters.
.PP
Example filter file:
.PP
.Vb 3
\&  any \*(Aqtcp port 22\*(Aq \*(AqSSH\*(Aq
\&  any \*(Aqesp\*(Aq         \*(AqIPsec\*(Aq
\&  any \*(Aqport 53\*(Aq     \*(AqDNS\*(Aq
.Ve
.SH "OUTPUT FORMAT"
.IX Header "OUTPUT FORMAT"
\&\fIflowmon\fR reports stream statistics to its \fI\s-1STDOUT\s0\fR. Statistics are printed
in \s-1JSON\s0 format, one hash per line. Each defined stream produces one \s-1JSON\s0 each
second.
.PP
Example output (line folded for readability):
.PP
.Vb 2
\&  {"stream_id": 0, "stream_name": "SSH", "time": 1234567890,
\&    "bytes": 288, "packets": 3}
.Ve
.PP
Fields are as follow:
.ie n .IP """stream_id""" 4
.el .IP "\f(CW``stream_id''\fR" 4
.IX Item """stream_id"""
position of a stream in the list of all defined streams, starting with \f(CW0\fR
.ie n .IP """stream_name""" 4
.el .IP "\f(CW``stream_name''\fR" 4
.IX Item """stream_name"""
description of a stream (\fB\-d\fR)
.ie n .IP """time""" 4
.el .IP "\f(CW``time''\fR" 4
.IX Item """time"""
unix timestamp (\fItime\fR\|(2)) of when data was collected
.ie n .IP """bytes"", ""packets""" 4
.el .IP "\f(CW``bytes''\fR, \f(CW``packets''\fR" 4
.IX Item """bytes"", ""packets"""
size of data stream that passed through filter since last report
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIbpf\fR\|(4), \fIpcap\-filter\fR\|(7), \fItcpdump\fR\|(8)
